name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v3

      - name: Build docker image and run tests
        run: |
          docker compose build
          docker compose run backend pytest -m "not apitest"

          docker compose up -d
          docker compose down

  push-image:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3 

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract short SHA
        id: git_sha
        run: echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and Push Docker Backend Image
        run: |
          docker build -t ghcr.io/sverrenystad/eit-backend:${{ env.GIT_SHA }} ./backend
          docker push ghcr.io/sverrenystad/eit-backend:${{ env.GIT_SHA }}

      - name: Build and Push Docker Client Image
        run: |
          docker build -t ghcr.io/sverrenystad/eit-client:${{ env.GIT_SHA }} ./client/
          docker push ghcr.io/sverrenystad/eit-client:${{ env.GIT_SHA }}

  dependabot:
      name: 'Dependabot'
      runs-on: ubuntu-latest
      # Build jobs, if one of them fails, it won't merge the PR.
      needs: [build] 
      # Detect that the PR author is dependabot
      if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'}} 
      steps:
        - name: Enable auto-merge for Dependabot PRs
          # Use Github CLI to merge automatically the PR
          run: gh pr merge --auto --squash "$PR_URL"
          env:
            PR_URL: ${{github.event.pull_request.html_url}}
            GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}